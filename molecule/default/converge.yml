---
- name: Converge
  hosts: all
  become: yes
  vars:
    docker_service_manage: false
    traefik_containers:
      traefik:
        name: traefik
        image: traefik:2.9.4
        command:
          - --api=true
          - --api.dashboard=true
          - --api.insecure=false
          - --pilot.dashboard=false
          - --global.sendAnonymousUsage=false
          - --global.checkNewVersion=false
          - --entryPoints.http.address=:80
          - --entryPoints.https.address=:443
          - --entryPoints.traefik.address=:8080
          - --entrypoints.http.http.redirections.entrypoint.to=https
          - --entrypoints.http.http.redirections.entrypoint.scheme=https
          - --entrypoints.traefik.http.redirections.entrypoint.to=https
          - --entrypoints.traefik.http.redirections.entrypoint.scheme=https
          - --entryPoints.https.http.tls=true
          - --entryPoints.https.http.tls.domains[0].main=flyingrabb.it
          - --entryPoints.https.http.tls.certresolver=dns-cloudflare
          - --entryPoints.https.http.tls.domains[0].sans=*.flyingrabb.it
          - --entryPoints.https.http.middlewares=chain-redirect@file
          - --entryPoints.http.forwardedHeaders.insecure=false
          - --entryPoints.https.forwardedHeaders.insecure=false
          - --entryPoints.traefik.forwardedHeaders.insecure=false

          - "--providers.docker=true"
          - "--providers.docker.exposedByDefault=false"
          - "--providers.file.directory=/rules"
          - "--providers.file.watch=true"
          ## DNS Challenge
          - --certificatesResolvers.dns-cloudflare.acme.email=$ACME_EMAIL
          - --certificatesResolvers.dns-cloudflare.acme.storage=/letsencrypt/acme.json
          - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
          - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
          - --certificatesresolvers.dns-cloudflare.acme.caserver=https://acme-v02.api.letsencrypt.org/directory # enable metrics
          - "--metrics.prometheus=true"
          - "--metrics.prometheus.manualrouting=true"

          # Enable Logging
          - --log=true
          - "--log.level=WARN" # DEBUG, PANIC, FATAL, ERROR, WARN, INFO
          - "--log.filePath=/var/log/traefik/traefik.log"
          - "--accesslog.filepath=/var/log/traefik/access.log"

          - "--serversTransport.insecureSkipVerify=true"
          # JAEGER
          - "--tracing.jaeger=true"
          - "--tracing.jaeger.samplingServerURL=http://jaegertracing:5778/sampling"
          - "--tracing.jaeger.samplingType=const"
          - "--tracing.jaeger.samplingParam=1"
          - "--tracing.jaeger.localAgentHostPort=127.0.0.1:6831"
          - "--tracing.jaeger.gen128Bit"
          - "--tracing.jaeger.propagation=jaeger"
          - "--tracing.jaeger.traceContextHeaderName=uber-trace-id"
          - "--tracing.jaeger.collector.endpoint=http://jaegertracing:14268/api/traces?format=jaeger.thrift"
        labels:
          - "traefik.enable=true"
          - "traefik.http.routers.traefik.rule=Host(`traefik.flyingrabb.it`) || Host(`www.traefik.flyingrabb.it`)"
          - "traefik.http.routers.traefik.entrypoints=https"
          - "traefik.http.routers.traefik.middlewares=chain-basic-auth@file"
          - "traefik.http.routers.traefik.service=api@internal"
          # - "traefik.http.routers.traefik.middlewares=authelia@file"
        security_opt:
          - label:type:container_runtime_t
        ports:
          - target: 80
            published: 80
            protocol: tcp
            mode: host
          - target: 443
            published: 443
            protocol: tcp
            mode: host
          - target: 8080
            published: 8080
            protocol: tcp
            mode: host
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock:ro"
          - "/etc/traefik/rules:/rules"
          - "/etc/traefik/acme.json:/letsencrypt/acme.json"
          - "/var/log/traefik:/var/log/traefik"
        secrets:
          - cloudflare_email
          - cloudflare_api_key
        environment:
          CF_API_EMAIL_FILE: /run/secrets/cloudflare_email
          CF_API_KEY_FILE: /run/secrets/cloudflare_api_key
        networks:
          - name: intern
          - name: extern
  tasks:
    - name: "Include geerlingguy.docker"
      include_role:
        name: "geerlingguy.docker"

    - name: "Include usegalaxy_eu.traefik"
      include_role:
        name: "usegalaxy_eu.traefik"
